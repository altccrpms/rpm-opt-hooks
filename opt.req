#!/bin/bash

# Copyright (c) 2015 Sandro Mani <manisandro@gmail.com>
# Copyright (c) 2015 Orion Poplawski <orion@cora.nwra.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE


# First argument is buildroot
buildroot="$1"
if [ ! -d "$buildroot" ]; then
  >&2 echo "Invalid buildroot"
  exit 1
fi

# Source common routines
. /usr/lib/rpm/opt.common

# Remaining arguments are passed to elfdeps
shift
elfdepsargs="$@"

# Cache
declare -A optnameforlib

# Get the default requres string from elfdeps and 
# check whether the library exists in /opt.  If yes, prepend
# the appropriate prefix to each requires string
/usr/lib/rpm/elfdeps --requires $elfdepsargs | while read req
do
  # Strip of any trailing rpm () syntax to get filename
  lib=${req%%(*}
  optname=
  # Check cache
  if [ -z "${optnameforlib[$lib]}" ]; then
    # Record negative result in cache
    optnameforlib[$lib]=none
    while read libpath
    do
      thisoptname=$(getoptname ${libpath#$buildroot})
      # Record result in cache if none previous or a postitive result
      [ "${optnameforlib[$lib]}" = none -o -n "$thisoptname" ] && optnameforlib[$lib]=$thisoptname
    done < <(find $buildroot/opt /opt -name $lib 2>&-)
  fi

  # Pull from cache
  [ "${optnameforlib[$lib]}" != none ] && optname=${optnameforlib[$lib]}

  # Add prefix if necessary
  [ -n "$optname" ] && req="opt($optname)$req"
  echo "$req"
done
